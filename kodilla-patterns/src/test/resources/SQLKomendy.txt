CREATE TABLE USERS
(
    ID SERIAL PRIMARY KEY,
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100)
);

CREATE TABLE POSTS
(
    ID SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
);

SELECT * FROM USERS;
ALTER TABLE POSTS AUTO_INCREMENT = 5;

INSERT INTO USERS (ID,FIRSTNAME, LASTNAME) VALUES (1,'John', 'Smith');

COMMIT;

INSERT INTO POSTS (USER_ID, BODY) VALUES (1, 'This is my first post on this forum!');

COMMIT;

SELECT * FROM POSTS;

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY) VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY) VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY) VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY) VALUES (4, 'Yo all! Here is Thomas!');

UPDATE POSTS SET ID = '5' WHERE ID = '8';
COMMIT;

CREATE TABLE ISSUESLISTS
(ID SERIAL PRIMARY KEY,
NAME CHAR(50)
);
CREATE TABLE ISSUES
(ID SERIAL PRIMARY KEY,
ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
SUMMARY CHAR(50),
DESCRIPTION VARCHAR(1024),
USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);
SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

INSERT INTO ISSUESLISTS (NAME) VALUES ('ToDo');
INSERT INTO ISSUESLISTS (NAME) VALUES ('In progress');
INSERT INTO ISSUESLISTS (NAME) VALUES ('Done');
SELECT * FROM ISSUESLISTS;
COMMIT;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1,'Summary1','Description1',1);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1,'Summary2','Description2',1);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1,'Summary3','Description3',3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1,'Summary4','Description4',3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (1,'Summary5','Description5',4);
SELECT * FROM ISSUES;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2,'Summary1','Description1',2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2,'Summary2','Description2',2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2,'Summary3','Description3',3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2,'Summary4','Description4',3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (2,'Summary5','Description5',5);
SELECT * FROM ISSUES;

INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3,'Summary1','Description1',1);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3,'Summary2','Description2',2);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3,'Summary3','Description3',3);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3,'Summary4','Description4',4);
INSERT INTO ISSUES (ISSUESLIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNEDTO) VALUES (3,'Summary5','Description5',5);
SELECT * FROM ISSUES;

COMMIT;

SELECT ID, FIRSTNAME FROM USERS
WHERE (ID >= 4 AND ID <= 10) OR ID = 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1
ORDER BY U.LASTNAME, U.FIRSTNAME;

SELECT COUNT(*) AS POSTS_NUMBER
FROM POSTS;

SELECT SUM(ID) AS TOTAL FROM POSTS;

SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
         JOIN POSTS P ON U.ID = P.USER_ID;

SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

SELECT S.SUMMARY, I.NAME
FROM ISSUESLISTS I JOIN ISSUES S ON I.ID = S.ISSUESLIST_ID;

SELECT U.ID, I.SUMMARY
FROM ISSUES I JOIN USERS U ON I.USER_ID_ASSIGNEDTO = U.ID;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS TASKS_NUMBER
FROM ISSUES I JOIN USERS U ON I.USER_ID_ASSIGNEDTO = U.ID
GROUP BY U.FIRSTNAME, U.LASTNAME;